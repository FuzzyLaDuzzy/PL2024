import ply.lex as lex

tokens = (
    'SELECT',
    'FROM',
    'WHERE',
    'IDENTIFIER',
    'COMMA',
    'NUMBER',
    'GTEQ',  # Greater than or equal to
)

reserved = {
    'SELECT': 'SELECT',
    'FROM': 'FROM',
    'WHERE': 'WHERE',
}

t_COMMA = r','
t_GTEQ = r'>='

def t_IDENTIFIER(t):
    r'[a-zA-Z_][a-zA-Z0-9_]*'
    t.type = reserved.get(t.value.upper(), 'IDENTIFIER')    # Check for reserved words
    return t

def t_NUMBER(t):
    r'\d+'
    t.value = int(t.value)
    return t

def t_error(t):
    print("Illegal character '%s'" % t.value[0])
    t.lexer.skip(1)

def t_newline(t):
    r'\n+'
    t.lexer.lineno += len(t.value)

t_ignore = ' \t'

lexer = lex.lex()

sql_code = input("Enter some SQL code: ")

lexer.input(sql_code)
tokens = list(lexer)

data = [
    {'id': 1, 'nome': 'John', 'salario': 820},
    {'id': 2, 'nome': 'Jane', 'salario': 800},
    {'id': 3, 'nome': 'Joe', 'salario': 900},
]

# Parse and execute the SQL code
if tokens[0].type == 'SELECT':
    columns = [token.value for token in tokens[1:] if token.type == 'IDENTIFIER']
    where_index = tokens.index(next(token for token in tokens if token.type == 'WHERE'))
    where_column = tokens[where_index + 1].value
    where_value = tokens[where_index + 3].value
    for row in data:
        if row[where_column] >= where_value:
            print({col: row[col] for col in columns if col in row})
